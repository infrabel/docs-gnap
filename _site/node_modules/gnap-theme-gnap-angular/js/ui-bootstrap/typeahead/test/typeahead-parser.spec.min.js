describe("syntax parser",function(){var a,b,c;beforeEach(module("ui.bootstrap.typeahead")),beforeEach(inject(function(d,e,f){a=f,b=d,c=e})),it("should parse the simplest array-based syntax",function(){b.states=["Alabama","California","Delaware"];var c=a.parse("state for state in states | filter:$viewValue"),d=c.itemName,e={$viewValue:"al"};expect(c.source(b,e)).toEqual(["Alabama","California"]),e[d]="Alabama",expect(c.viewMapper(b,e)).toEqual("Alabama"),expect(c.modelMapper(b,e)).toEqual("Alabama")}),it("should parse the simplest function-based syntax",function(){b.getStates=function(a){return c(["Alabama","California","Delaware"],a)};var d=a.parse("state for state in getStates($viewValue)"),e=d.itemName,f={$viewValue:"al"};expect(d.source(b,f)).toEqual(["Alabama","California"]),f[e]="Alabama",expect(d.viewMapper(b,f)).toEqual("Alabama"),expect(d.modelMapper(b,f)).toEqual("Alabama")}),it("should allow to specify custom model mapping that is used as a label as well",function(){b.states=[{code:"AL",name:"Alabama"},{code:"CA",name:"California"},{code:"DE",name:"Delaware"}];var c=a.parse('state.name for state in states | filter:$viewValue | orderBy:"name":true'),d=c.itemName;expect(d).toEqual("state"),expect(c.source(b,{$viewValue:"al"})).toEqual([{code:"CA",name:"California"},{code:"AL",name:"Alabama"}]);var e={$viewValue:"al"};e[d]={code:"AL",name:"Alabama"},expect(c.viewMapper(b,e)).toEqual("Alabama"),expect(c.modelMapper(b,e)).toEqual("Alabama")}),it("should allow to specify custom view and model mappers",function(){b.states=[{code:"AL",name:"Alabama"},{code:"CA",name:"California"},{code:"DE",name:"Delaware"}];var c=a.parse('state.code as state.name + " ("+state.code+")" for state in states | filter:$viewValue | orderBy:"name":true'),d=c.itemName;expect(c.source(b,{$viewValue:"al"})).toEqual([{code:"CA",name:"California"},{code:"AL",name:"Alabama"}]);var e={$viewValue:"al"};e[d]={code:"AL",name:"Alabama"},expect(c.viewMapper(b,e)).toEqual("Alabama (AL)"),expect(c.modelMapper(b,e)).toEqual("AL")})});
//# sourceMappingURL=..\..\..\debug\ui-bootstrap\typeahead\test\typeahead-parser.spec.min.map