describe("timepicker directive",function(){function a(a,b){var c=new Date;return c.setHours(a),c.setMinutes(b),c}function b(a){for(var b=l.find("input"),c=[],d=0;2>d;d++)c.push(b.eq(d).val());return a!==!0&&c.push(g().text()),c}function c(){return[k.time.getHours(),k.time.getMinutes()]}function d(a,b){return l.find("tr").eq(a?0:2).find("td").eq(b).find("a").eq(0)}function e(a){return d(a,0)}function f(a){return d(a,2)}function g(){return l.find("button").eq(0)}function h(a,b){for(var c=0,d=b||1;d>c;c++)a.click(),k.$digest()}function i(a){var b=$.Event("mousewheel");return b.wheelDelta=a,b}function j(a){var b=$.Event("wheel");return b.deltaY=a,b}var k,l;beforeEach(module("ui.bootstrap.timepicker")),beforeEach(module("template/timepicker/timepicker.html")),beforeEach(inject(function(b,c){$compile=b,k=c,k.time=a(14,40),l=$compile('<timepicker ng-model="time"></timepicker>')(k),k.$digest()})),it("contains three row & three input elements",function(){expect(l.find("tr").length).toBe(3),expect(l.find("input").length).toBe(2),expect(l.find("button").length).toBe(1)}),it("has initially the correct time & meridian",function(){expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40])}),it("has `selected` current time when model is initially cleared",function(){k.time=null,l=$compile('<timepicker ng-model="time"></timepicker>')(k),k.$digest(),expect(k.time).toBe(null),expect(b()).not.toEqual(["","",""])}),it("changes inputs when model changes value",function(){k.time=a(11,50),k.$digest(),expect(b()).toEqual(["11","50","AM"]),expect(c()).toEqual([11,50]),k.time=a(16,40),k.$digest(),expect(b()).toEqual(["04","40","PM"]),expect(c()).toEqual([16,40])}),it("increases / decreases hours when arrows are clicked",function(){var a=e(!0),d=e(!1);h(a),expect(b()).toEqual(["03","40","PM"]),expect(c()).toEqual([15,40]),h(d),expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40]),h(d),expect(b()).toEqual(["01","40","PM"]),expect(c()).toEqual([13,40])}),it("increase / decreases minutes by default step when arrows are clicked",function(){var a=f(!0),d=f(!1);h(a),expect(b()).toEqual(["02","41","PM"]),expect(c()).toEqual([14,41]),h(d),expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40]),h(d),expect(b()).toEqual(["02","39","PM"]),expect(c()).toEqual([14,39])}),it("meridian button has correct type",function(){var a=g();expect(a.attr("type")).toBe("button")}),it("toggles meridian when button is clicked",function(){var a=g();h(a),expect(b()).toEqual(["02","40","AM"]),expect(c()).toEqual([2,40]),h(a),expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40]),h(a),expect(b()).toEqual(["02","40","AM"]),expect(c()).toEqual([2,40])}),it('has minutes "connected" to hours',function(){var a=f(!0),d=f(!1);h(a,10),expect(b()).toEqual(["02","50","PM"]),expect(c()).toEqual([14,50]),h(a,10),expect(b()).toEqual(["03","00","PM"]),expect(c()).toEqual([15,0]),h(a,10),k.$digest(),expect(b()).toEqual(["03","10","PM"]),expect(c()).toEqual([15,10]),h(d,10),k.$digest(),expect(b()).toEqual(["03","00","PM"]),expect(c()).toEqual([15,0]),h(d,10),k.$digest(),expect(b()).toEqual(["02","50","PM"]),expect(c()).toEqual([14,50])}),it('has hours "connected" to meridian',function(){var d=e(!0),f=e(!1);k.time=a(11,0),k.$digest(),expect(b()).toEqual(["11","00","AM"]),expect(c()).toEqual([11,0]),h(d),expect(b()).toEqual(["12","00","PM"]),expect(c()).toEqual([12,0]),h(d),expect(b()).toEqual(["01","00","PM"]),expect(c()).toEqual([13,0]),h(f),expect(b()).toEqual(["12","00","PM"]),expect(c()).toEqual([12,0]),h(f),expect(b()).toEqual(["11","00","AM"]),expect(c()).toEqual([11,0]),k.time=a(23,0),k.$digest(),expect(b()).toEqual(["11","00","PM"]),expect(c()).toEqual([23,0]),h(d),expect(b()).toEqual(["12","00","AM"]),expect(c()).toEqual([0,0]),h(d),expect(b()).toEqual(["01","00","AM"]),expect(c()).toEqual([1,0]),h(f),expect(b()).toEqual(["12","00","AM"]),expect(c()).toEqual([0,0]),h(f),expect(b()).toEqual(["11","00","PM"]),expect(c()).toEqual([23,0])}),it("changes only the time part when hours change",function(){k.time=a(23,50),k.$digest();var d=k.time.getDate(),f=e(!0);h(f),expect(b()).toEqual(["12","50","AM"]),expect(c()).toEqual([0,50]),expect(d).toEqual(k.time.getDate())}),it("changes only the time part when minutes change",function(){l=$compile('<timepicker ng-model="time" minute-step="15"></timepicker>')(k),k.time=a(0,0),k.$digest();var d=k.time.getDate(),e=f(!0);h(e,2),expect(b()).toEqual(["12","30","AM"]),expect(c()).toEqual([0,30]),expect(d).toEqual(k.time.getDate());var g=f(!1);h(g,2),expect(b()).toEqual(["12","00","AM"]),expect(c()).toEqual([0,0]),expect(d).toEqual(k.time.getDate()),h(g,2),expect(b()).toEqual(["11","30","PM"]),expect(c()).toEqual([23,30]),expect(d).toEqual(k.time.getDate())}),it('responds properly on "mousewheel" events',function(){var a=l.find("input"),d=a.eq(0),e=a.eq(1),f=i(1),g=i(-1);expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40]),d.trigger(f),k.$digest(),expect(b()).toEqual(["03","40","PM"]),expect(c()).toEqual([15,40]),d.trigger(f),k.$digest(),expect(b()).toEqual(["04","40","PM"]),expect(c()).toEqual([16,40]),e.trigger(f),k.$digest(),expect(b()).toEqual(["04","41","PM"]),expect(c()).toEqual([16,41]),e.trigger(f),k.$digest(),expect(b()).toEqual(["04","42","PM"]),expect(c()).toEqual([16,42]),e.trigger(g),k.$digest(),expect(b()).toEqual(["04","41","PM"]),expect(c()).toEqual([16,41]),e.trigger(g),k.$digest(),expect(b()).toEqual(["04","40","PM"]),expect(c()).toEqual([16,40]),d.trigger(g),k.$digest(),expect(b()).toEqual(["03","40","PM"]),expect(c()).toEqual([15,40]),d.trigger(g),k.$digest(),expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40])}),it('responds properly on "wheel" events',function(){var a=l.find("input"),d=a.eq(0),e=a.eq(1),f=j(-1),g=j(1);expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40]),d.trigger(f),k.$digest(),expect(b()).toEqual(["03","40","PM"]),expect(c()).toEqual([15,40]),d.trigger(f),k.$digest(),expect(b()).toEqual(["04","40","PM"]),expect(c()).toEqual([16,40]),e.trigger(f),k.$digest(),expect(b()).toEqual(["04","41","PM"]),expect(c()).toEqual([16,41]),e.trigger(f),k.$digest(),expect(b()).toEqual(["04","42","PM"]),expect(c()).toEqual([16,42]),e.trigger(g),k.$digest(),expect(b()).toEqual(["04","41","PM"]),expect(c()).toEqual([16,41]),e.trigger(g),k.$digest(),expect(b()).toEqual(["04","40","PM"]),expect(c()).toEqual([16,40]),d.trigger(g),k.$digest(),expect(b()).toEqual(["03","40","PM"]),expect(c()).toEqual([15,40]),d.trigger(g),k.$digest(),expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40])}),describe("attributes",function(){beforeEach(function(){k.hstep=2,k.mstep=30,k.time=a(14,0),l=$compile('<timepicker ng-model="time" hour-step="hstep" minute-step="mstep"></timepicker>')(k),k.$digest()}),it("increases / decreases hours by configurable step",function(){var a=e(!0),d=e(!1);expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0]),h(a),expect(b()).toEqual(["04","00","PM"]),expect(c()).toEqual([16,0]),h(d),expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0]),h(d),expect(b()).toEqual(["12","00","PM"]),expect(c()).toEqual([12,0]),k.hstep=3,k.$digest(),h(a),expect(b()).toEqual(["03","00","PM"]),expect(c()).toEqual([15,0]),h(d),expect(b()).toEqual(["12","00","PM"]),expect(c()).toEqual([12,0])}),it("increases / decreases minutes by configurable step",function(){var a=f(!0),d=f(!1);h(a),expect(b()).toEqual(["02","30","PM"]),expect(c()).toEqual([14,30]),h(a),expect(b()).toEqual(["03","00","PM"]),expect(c()).toEqual([15,0]),h(d),expect(b()).toEqual(["02","30","PM"]),expect(c()).toEqual([14,30]),h(d),expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0]),k.mstep=15,k.$digest(),h(a),expect(b()).toEqual(["02","15","PM"]),expect(c()).toEqual([14,15]),h(d),expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0]),h(d),expect(b()).toEqual(["01","45","PM"]),expect(c()).toEqual([13,45])}),it('responds properly on "mousewheel" events with configurable steps',function(){var a=l.find("input"),d=a.eq(0),e=a.eq(1),f=i(1),g=i(-1);expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0]),d.trigger(f),k.$digest(),expect(b()).toEqual(["04","00","PM"]),expect(c()).toEqual([16,0]),e.trigger(f),k.$digest(),expect(b()).toEqual(["04","30","PM"]),expect(c()).toEqual([16,30]),e.trigger(g),k.$digest(),expect(b()).toEqual(["04","00","PM"]),expect(c()).toEqual([16,0]),d.trigger(g),k.$digest(),expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0])}),it('responds properly on "wheel" events with configurable steps',function(){var a=l.find("input"),d=a.eq(0),e=a.eq(1),f=j(-1),g=j(1);expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0]),d.trigger(f),k.$digest(),expect(b()).toEqual(["04","00","PM"]),expect(c()).toEqual([16,0]),e.trigger(f),k.$digest(),expect(b()).toEqual(["04","30","PM"]),expect(c()).toEqual([16,30]),e.trigger(g),k.$digest(),expect(b()).toEqual(["04","00","PM"]),expect(c()).toEqual([16,0]),d.trigger(g),k.$digest(),expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0])}),it("can handle strings as steps",function(){var a=e(!0),d=f(!0);expect(b()).toEqual(["02","00","PM"]),expect(c()).toEqual([14,0]),k.hstep="4",k.mstep="20",k.$digest(),h(a),expect(b()).toEqual(["06","00","PM"]),expect(c()).toEqual([18,0]),h(d),expect(b()).toEqual(["06","20","PM"]),expect(c()).toEqual([18,20])})}),describe("12 / 24 hour mode",function(){function d(){return l.find("tr").eq(1).find("td").eq(3)}beforeEach(function(){k.meridian=!1,k.time=a(14,10),l=$compile('<timepicker ng-model="time" show-meridian="meridian"></timepicker>')(k),k.$digest()}),it("initially displays correct time when `show-meridian` is false",function(){expect(b(!0)).toEqual(["14","10"]),expect(c()).toEqual([14,10]),expect(d()).toBeHidden()}),it("toggles correctly between different modes",function(){expect(b(!0)).toEqual(["14","10"]),k.meridian=!0,k.$digest(),expect(b()).toEqual(["02","10","PM"]),expect(c()).toEqual([14,10]),expect(d()).not.toBeHidden(),k.meridian=!1,k.$digest(),expect(b(!0)).toEqual(["14","10"]),expect(c()).toEqual([14,10]),expect(d()).toBeHidden()}),it("handles correctly initially empty model on parent element",function(){k.time=null,l=$compile('<span ng-model="time"><timepicker show-meridian="meridian"></timepicker></span>')(k),k.$digest(),expect(k.time).toBe(null)})}),describe("`meridians` attribute",function(){beforeEach(inject(function(){k.meridiansArray=["am","pm"],l=$compile('<timepicker ng-model="time" meridians="meridiansArray"></timepicker>')(k),k.$digest()})),it("displays correctly",function(){expect(b()[2]).toBe("pm")}),it("toggles correctly",function(){k.time=a(2,40),k.$digest(),expect(b()[2]).toBe("am")})}),describe("`readonly-input` attribute",function(){beforeEach(inject(function(){k.meridiansArray=["am","pm"],l=$compile('<timepicker ng-model="time" readonly-input="true"></timepicker>')(k),k.$digest()})),it("should make inputs readonly",function(){var a=l.find("input");expect(a.eq(0).attr("readonly")).toBe("readonly"),expect(a.eq(1).attr("readonly")).toBe("readonly")})}),describe("setting timepickerConfig steps",function(){var a={};beforeEach(inject(function(b,c,d){angular.extend(a,d),d.hourStep=2,d.minuteStep=10,d.showMeridian=!1,l=$compile('<timepicker ng-model="time"></timepicker>')(k),k.$digest()})),afterEach(inject(function(b){angular.extend(b,a)})),it("does not affect the initial value",function(){expect(b(!0)).toEqual(["14","40"]),expect(c()).toEqual([14,40])}),it("increases / decreases hours with configured step",function(){var a=e(!0),d=e(!1);h(a,2),expect(b(!0)).toEqual(["18","40"]),expect(c()).toEqual([18,40]),h(d,3),expect(b(!0)).toEqual(["12","40"]),expect(c()).toEqual([12,40])}),it("increases / decreases minutes with configured step",function(){var a=f(!0),d=f(!1);h(a),expect(b(!0)).toEqual(["14","50"]),expect(c()).toEqual([14,50]),h(d,3),expect(b(!0)).toEqual(["14","20"]),expect(c()).toEqual([14,20])})}),describe("setting timepickerConfig meridian labels",function(){var d={};beforeEach(inject(function(a,b,c){angular.extend(d,c),c.meridians=["π.μ.","μ.μ."],c.showMeridian=!0,l=$compile('<timepicker ng-model="time"></timepicker>')(k),k.$digest()})),afterEach(inject(function(a){angular.extend(a,d)})),it("displays correctly",function(){expect(b()).toEqual(["02","40","μ.μ."]),expect(c()).toEqual([14,40])}),it("toggles correctly",function(){k.time=a(2,40),k.$digest(),expect(b()).toEqual(["02","40","π.μ."]),expect(c()).toEqual([2,40])})}),describe("user input validation",function(){function a(){return l.find("input").eq(0)}function d(){return l.find("input").eq(1)}var e;beforeEach(inject(function(a){e=function(b,c){b.val(c),b.trigger(a.hasEvent("input")?"input":"change"),k.$digest()}})),it("has initially the correct time & meridian",function(){expect(b()).toEqual(["02","40","PM"]),expect(c()).toEqual([14,40])}),it("updates hours & pads on input change & pads on blur",function(){var d=a();e(d,5),expect(b()).toEqual(["5","40","PM"]),expect(c()).toEqual([17,40]),d.blur(),expect(b()).toEqual(["05","40","PM"]),expect(c()).toEqual([17,40])}),it("updates minutes & pads on input change & pads on blur",function(){var a=d();e(a,9),expect(b()).toEqual(["02","9","PM"]),expect(c()).toEqual([14,9]),a.blur(),expect(b()).toEqual(["02","09","PM"]),expect(c()).toEqual([14,9])}),it("clears model when input hours is invalid & alerts the UI",function(){var d=a();e(d,"pizza"),expect(k.time).toBe(null),expect(d.parent().hasClass("has-error")).toBe(!0),expect(l.hasClass("ng-invalid-time")).toBe(!0),e(d,8),d.blur(),k.$digest(),expect(b()).toEqual(["08","40","PM"]),expect(c()).toEqual([20,40]),expect(d.parent().hasClass("has-error")).toBe(!1),expect(l.hasClass("ng-invalid-time")).toBe(!1)}),it("clears model when input minutes is invalid & alerts the UI",function(){var a=d();e(a,"pizza"),expect(k.time).toBe(null),expect(a.parent().hasClass("has-error")).toBe(!0),expect(l.hasClass("ng-invalid-time")).toBe(!0),e(a,22),expect(b()).toEqual(["02","22","PM"]),expect(c()).toEqual([14,22]),expect(a.parent().hasClass("has-error")).toBe(!1),expect(l.hasClass("ng-invalid-time")).toBe(!1)}),it("handles 12/24H mode change",function(){k.meridian=!0,l=$compile('<timepicker ng-model="time" show-meridian="meridian"></timepicker>')(k),k.$digest();var d=a();e(d,"16"),expect(k.time).toBe(null),expect(d.parent().hasClass("has-error")).toBe(!0),expect(l.hasClass("ng-invalid-time")).toBe(!0),k.meridian=!1,k.$digest(),expect(b(!0)).toEqual(["16","40"]),expect(c()).toEqual([16,40]),expect(l.hasClass("ng-invalid-time")).toBe(!1)})}),describe("when model is not a Date",function(){beforeEach(inject(function(){eelement=$compile('<timepicker ng-model="time"></timepicker>')(k)})),it("should not be invalid when the model is null",function(){k.time=null,k.$digest(),expect(l.hasClass("ng-invalid-time")).toBe(!1)}),it("should not be invalid when the model is undefined",function(){k.time=void 0,k.$digest(),expect(l.hasClass("ng-invalid-time")).toBe(!1)}),it("should not be invalid when the model is a valid string date representation",function(){k.time="September 30, 2010 15:30:00",k.$digest(),expect(l.hasClass("ng-invalid-time")).toBe(!1),expect(b()).toEqual(["03","30","PM"])}),it("should be invalid when the model is not a valid string date representation",function(){k.time="pizza",k.$digest(),expect(l.hasClass("ng-invalid-time")).toBe(!0)}),it("should return valid when the model becomes valid",function(){k.time="pizza",k.$digest(),expect(l.hasClass("ng-invalid-time")).toBe(!0),k.time=new Date,k.$digest(),expect(l.hasClass("ng-invalid-time")).toBe(!1)}),it("should return valid when the model is cleared",function(){k.time="pizza",k.$digest(),expect(l.hasClass("ng-invalid-time")).toBe(!0),k.time=null,k.$digest(),expect(l.hasClass("ng-invalid-time")).toBe(!1)})}),describe("use with `ng-required` directive",function(){beforeEach(inject(function(){k.time=null,l=$compile('<timepicker ng-model="time" ng-required="true"></timepicker>')(k),k.$digest()})),it("should be invalid initially",function(){expect(l.hasClass("ng-invalid")).toBe(!0)}),it("should be valid if model has been specified",function(){k.time=new Date,k.$digest(),expect(l.hasClass("ng-invalid")).toBe(!1)})}),describe("use with `ng-change` directive",function(){beforeEach(inject(function(){k.changeHandler=jasmine.createSpy("changeHandler"),k.time=new Date,l=$compile('<timepicker ng-model="time" ng-change="changeHandler()"></timepicker>')(k),k.$digest()})),it("should not be called initially",function(){expect(k.changeHandler).not.toHaveBeenCalled()}),it("should be called when hours / minutes buttons clicked",function(){var a=e(!0),b=f(!1);h(a,2),h(b,3),k.$digest(),expect(k.changeHandler.callCount).toBe(5)}),it("should not be called when model changes programatically",function(){k.time=new Date,k.$digest(),expect(k.changeHandler).not.toHaveBeenCalled()})})});
//# sourceMappingURL=..\..\..\debug\ui-bootstrap\timepicker\test\timepicker.spec.min.map