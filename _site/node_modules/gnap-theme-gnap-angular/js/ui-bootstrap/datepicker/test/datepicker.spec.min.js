describe("datepicker directive",function(){function a(){return o.find("th").eq(1).find("button").first().text()}function b(){o.find("th").eq(1).find("button").first().click()}function c(a){for(var b=o.find("th").eq(0).find("button").eq(0),c=0,d=a||1;d>c;c++)b.click()}function d(){o.find("th").eq(2).find("button").eq(0).click()}function e(){return o.find("thead").find("tr").eq(1)}function f(){for(var a=e().find("th"),b=[],c=1,d=a.length;d>c;c++)b.push(a.eq(c).text());return b}function g(){for(var a=o.find("tbody").find("tr"),b=[],c=0,d=a.length;d>c;c++)b.push(a.eq(c).find("td").eq(0).first().text());return b}function h(a){for(var b=o.find("tbody").find("tr"),c=[],d=0,e=b.length;e>d;d++){for(var f=b.eq(d).find("td"),g=[],h=a?1:0,i=f.length;i>h;h++)g.push(f.eq(h).find("button").text());c.push(g)}return c}function i(a){j().eq(a).click()}function j(){return o.find("tbody").find("button")}function k(a){var b=j();angular.forEach(b,function(b,c){expect(angular.element(b).hasClass("btn-info")).toBe(c===a)})}function l(a,b,c){var d={enter:13,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,esc:27},e=$.Event("keydown");e.which=d[b],c&&(e.ctrlKey=!0),a.trigger(e)}var m,n,o;beforeEach(module("ui.bootstrap.datepicker")),beforeEach(module("template/datepicker/datepicker.html")),beforeEach(module("template/datepicker/day.html")),beforeEach(module("template/datepicker/month.html")),beforeEach(module("template/datepicker/year.html")),beforeEach(module("template/datepicker/popup.html")),beforeEach(inject(function(a,b){n=a,m=b,m.date=new Date("September 30, 2010 15:30:00")})),describe("",function(){beforeEach(function(){o=n('<datepicker ng-model="date"></datepicker>')(m),m.$digest()}),it("is has a `<table>` element",function(){expect(o.find("table").length).toBe(1)}),it("shows the correct title",function(){expect(a()).toBe("September 2010")}),it("shows the label row & the correct day labels",function(){expect(e().css("display")).not.toBe("none"),expect(f()).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"])}),it("renders the calendar days correctly",function(){expect(h(!0)).toEqual([["29","30","31","01","02","03","04"],["05","06","07","08","09","10","11"],["12","13","14","15","16","17","18"],["19","20","21","22","23","24","25"],["26","27","28","29","30","01","02"],["03","04","05","06","07","08","09"]])}),it("renders the week numbers based on ISO 8601",function(){expect(g()).toEqual(["34","35","36","37","38","39"])}),it("value is correct",function(){expect(m.date).toEqual(new Date("September 30, 2010 15:30:00"))}),it("has `selected` only the correct day",function(){k(32)}),it("has no `selected` day when model is cleared",function(){m.date=null,m.$digest(),expect(m.date).toBe(null),k(null)}),it("does not change current view when model is cleared",function(){m.date=null,m.$digest(),expect(m.date).toBe(null),expect(a()).toBe("September 2010")}),it("`disables` visible dates from other months",function(){var a=j();angular.forEach(a,function(a,b){expect(angular.element(a).find("span").hasClass("text-muted")).toBe(3>b||b>32)})}),it("updates the model when a day is clicked",function(){i(17),expect(m.date).toEqual(new Date("September 15, 2010 15:30:00"))}),it("moves to the previous month & renders correctly when `previous` button is clicked",function(){c(),expect(a()).toBe("August 2010"),expect(f()).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),expect(h(!0)).toEqual([["01","02","03","04","05","06","07"],["08","09","10","11","12","13","14"],["15","16","17","18","19","20","21"],["22","23","24","25","26","27","28"],["29","30","31","01","02","03","04"],["05","06","07","08","09","10","11"]]),k(null,null)}),it("updates the model only when a day is clicked in the `previous` month",function(){c(),expect(m.date).toEqual(new Date("September 30, 2010 15:30:00")),i(17),expect(m.date).toEqual(new Date("August 18, 2010 15:30:00"))}),it("moves to the next month & renders correctly when `next` button is clicked",function(){d(),expect(a()).toBe("October 2010"),expect(f()).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),expect(h(!0)).toEqual([["26","27","28","29","30","01","02"],["03","04","05","06","07","08","09"],["10","11","12","13","14","15","16"],["17","18","19","20","21","22","23"],["24","25","26","27","28","29","30"],["31","01","02","03","04","05","06"]]),k(4)}),it("updates the model only when a day is clicked in the `next` month",function(){d(),expect(m.date).toEqual(new Date("September 30, 2010 15:30:00")),i(17),expect(m.date).toEqual(new Date("October 13, 2010 15:30:00"))}),it("updates the calendar when a day of another month is selected",function(){i(33),expect(m.date).toEqual(new Date("October 01, 2010 15:30:00")),expect(a()).toBe("October 2010"),expect(f()).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),expect(h(!0)).toEqual([["26","27","28","29","30","01","02"],["03","04","05","06","07","08","09"],["10","11","12","13","14","15","16"],["17","18","19","20","21","22","23"],["24","25","26","27","28","29","30"],["31","01","02","03","04","05","06"]]),k(5)}),it('should not "jump" months',function(){m.date=new Date("January 30, 2014"),m.$digest(),d(),expect(a()).toBe("February 2014"),c(),expect(a()).toBe("January 2014")}),describe("when `model` changes",function(){function b(){expect(a()).toBe("November 2005"),expect(h(!0)).toEqual([["30","31","01","02","03","04","05"],["06","07","08","09","10","11","12"],["13","14","15","16","17","18","19"],["20","21","22","23","24","25","26"],["27","28","29","30","01","02","03"],["04","05","06","07","08","09","10"]]),k(8)}describe("to a Date object",function(){it("updates",function(){m.date=new Date("November 7, 2005 23:30:00"),m.$digest(),b(),expect(angular.isDate(m.date)).toBe(!0)}),it("to a date that is invalid, it gets invalid",function(){m.date=new Date("pizza"),m.$digest(),expect(o.hasClass("ng-invalid")).toBeTruthy(),expect(o.hasClass("ng-invalid-date")).toBeTruthy(),expect(angular.isDate(m.date)).toBe(!0),expect(isNaN(m.date)).toBe(!0)})}),describe("not to a Date object",function(){it("to a Number, it updates calendar",function(){m.date=parseInt(new Date("November 7, 2005 23:30:00").getTime(),10),m.$digest(),b(),expect(angular.isNumber(m.date)).toBe(!0)}),it("to a string that can be parsed by Date, it updates calendar",function(){m.date="November 7, 2005 23:30:00",m.$digest(),b(),expect(angular.isString(m.date)).toBe(!0)}),it("to a string that cannot be parsed by Date, it gets invalid",function(){m.date="pizza",m.$digest(),expect(o.hasClass("ng-invalid")).toBeTruthy(),expect(o.hasClass("ng-invalid-date")).toBeTruthy(),expect(m.date).toBe("pizza")})})}),it("does not loop between after max mode",function(){expect(a()).toBe("September 2010"),b(),expect(a()).toBe("2010"),b(),expect(a()).toBe("2001 - 2020"),b(),expect(a()).toBe("2001 - 2020")}),describe("month selection mode",function(){beforeEach(function(){b()}),it("shows the year as title",function(){expect(a()).toBe("2010")}),it("shows months as options",function(){expect(h()).toEqual([["January","February","March"],["April","May","June"],["July","August","September"],["October","November","December"]])}),it("does not change the model",function(){expect(m.date).toEqual(new Date("September 30, 2010 15:30:00"))}),it("has `selected` only the correct month",function(){k(8)}),it("moves to the previous year when `previous` button is clicked",function(){c(),expect(a()).toBe("2009"),expect(h()).toEqual([["January","February","March"],["April","May","June"],["July","August","September"],["October","November","December"]]),k(null)}),it("moves to the next year when `next` button is clicked",function(){d(),expect(a()).toBe("2011"),expect(h()).toEqual([["January","February","March"],["April","May","June"],["July","August","September"],["October","November","December"]]),k(null)}),it("renders correctly when a month is clicked",function(){c(5),expect(a()).toBe("2005"),i(10),expect(m.date).toEqual(new Date("September 30, 2010 15:30:00")),expect(a()).toBe("November 2005"),expect(h(!0)).toEqual([["30","31","01","02","03","04","05"],["06","07","08","09","10","11","12"],["13","14","15","16","17","18","19"],["20","21","22","23","24","25","26"],["27","28","29","30","01","02","03"],["04","05","06","07","08","09","10"]]),i(17),expect(m.date).toEqual(new Date("November 16, 2005 15:30:00"))})}),describe("year selection mode",function(){beforeEach(function(){b(),b()}),it("shows the year range as title",function(){expect(a()).toBe("2001 - 2020")}),it("shows years as options",function(){expect(h()).toEqual([["2001","2002","2003","2004","2005"],["2006","2007","2008","2009","2010"],["2011","2012","2013","2014","2015"],["2016","2017","2018","2019","2020"]])}),it("does not change the model",function(){expect(m.date).toEqual(new Date("September 30, 2010 15:30:00"))}),it("has `selected` only the selected year",function(){k(9)}),it("moves to the previous year set when `previous` button is clicked",function(){c(),expect(a()).toBe("1981 - 2000"),expect(h()).toEqual([["1981","1982","1983","1984","1985"],["1986","1987","1988","1989","1990"],["1991","1992","1993","1994","1995"],["1996","1997","1998","1999","2000"]]),k(null)}),it("moves to the next year set when `next` button is clicked",function(){d(),expect(a()).toBe("2021 - 2040"),expect(h()).toEqual([["2021","2022","2023","2024","2025"],["2026","2027","2028","2029","2030"],["2031","2032","2033","2034","2035"],["2036","2037","2038","2039","2040"]]),k(null)})}),describe("keyboard navigation",function(){function b(){return o.find(".active").eq(0).text()}describe("day mode",function(){it("will be able to activate previous day",function(){l(o,"left"),expect(b()).toBe("29")}),it("will be able to select with enter",function(){l(o,"left"),l(o,"enter"),expect(m.date).toEqual(new Date("September 29, 2010 15:30:00"))}),it("will be able to select with space",function(){l(o,"left"),l(o,"space"),expect(m.date).toEqual(new Date("September 29, 2010 15:30:00"))}),it("will be able to activate next day",function(){l(o,"right"),expect(b()).toBe("01"),expect(a()).toBe("October 2010")}),it("will be able to activate same day in previous week",function(){l(o,"up"),expect(b()).toBe("23")}),it("will be able to activate same day in next week",function(){l(o,"down"),expect(b()).toBe("07"),expect(a()).toBe("October 2010")}),it("will be able to activate same date in previous month",function(){l(o,"pageup"),expect(b()).toBe("30"),expect(a()).toBe("August 2010")}),it("will be able to activate same date in next month",function(){l(o,"pagedown"),expect(b()).toBe("30"),expect(a()).toBe("October 2010")}),it("will be able to activate first day of the month",function(){l(o,"home"),expect(b()).toBe("01"),expect(a()).toBe("September 2010")}),it("will be able to activate last day of the month",function(){m.date=new Date("September 1, 2010 15:30:00"),m.$digest(),l(o,"end"),expect(b()).toBe("30"),expect(a()).toBe("September 2010")}),it("will be able to move to month mode",function(){l(o,"up",!0),expect(b()).toBe("September"),expect(a()).toBe("2010")}),it("will not respond when trying to move to lower mode",function(){l(o,"down",!0),expect(b()).toBe("30"),expect(a()).toBe("September 2010")})}),describe("month mode",function(){beforeEach(function(){l(o,"up",!0)}),it("will be able to activate previous month",function(){l(o,"left"),expect(b()).toBe("August")}),it("will be able to activate next month",function(){l(o,"right"),expect(b()).toBe("October")}),it("will be able to activate same month in previous row",function(){l(o,"up"),expect(b()).toBe("June")}),it("will be able to activate same month in next row",function(){l(o,"down"),expect(b()).toBe("December")}),it("will be able to activate same date in previous year",function(){l(o,"pageup"),expect(b()).toBe("September"),expect(a()).toBe("2009")}),it("will be able to activate same date in next year",function(){l(o,"pagedown"),expect(b()).toBe("September"),expect(a()).toBe("2011")}),it("will be able to activate first month of the year",function(){l(o,"home"),expect(b()).toBe("January"),expect(a()).toBe("2010")}),it("will be able to activate last month of the year",function(){l(o,"end"),expect(b()).toBe("December"),expect(a()).toBe("2010")}),it("will be able to move to year mode",function(){l(o,"up",!0),expect(b()).toBe("2010"),expect(a()).toBe("2001 - 2020")}),it("will be able to move to day mode",function(){l(o,"down",!0),expect(b()).toBe("30"),expect(a()).toBe("September 2010")}),it("will move to day mode when selecting",function(){l(o,"left",!0),l(o,"enter",!0),expect(b()).toBe("30"),expect(a()).toBe("August 2010"),expect(m.date).toEqual(new Date("September 30, 2010 15:30:00"))})}),describe("year mode",function(){beforeEach(function(){l(o,"up",!0),l(o,"up",!0)}),it("will be able to activate previous year",function(){l(o,"left"),expect(b()).toBe("2009")}),it("will be able to activate next year",function(){l(o,"right"),expect(b()).toBe("2011")}),it("will be able to activate same year in previous row",function(){l(o,"up"),expect(b()).toBe("2005")}),it("will be able to activate same year in next row",function(){l(o,"down"),expect(b()).toBe("2015")}),it("will be able to activate same date in previous view",function(){l(o,"pageup"),expect(b()).toBe("1990")}),it("will be able to activate same date in next view",function(){l(o,"pagedown"),expect(b()).toBe("2030")}),it("will be able to activate first year of the year",function(){l(o,"home"),expect(b()).toBe("2001")}),it("will be able to activate last year of the year",function(){l(o,"end"),expect(b()).toBe("2020")}),it("will not respond when trying to move to upper mode",function(){l(o,"up",!0),expect(a()).toBe("2001 - 2020")}),it("will be able to move to month mode",function(){l(o,"down",!0),expect(b()).toBe("September"),expect(a()).toBe("2010")}),it("will move to month mode when selecting",function(){l(o,"left",!0),l(o,"enter",!0),expect(b()).toBe("September"),expect(a()).toBe("2009"),expect(m.date).toEqual(new Date("September 30, 2010 15:30:00"))})}),describe("`aria-activedescendant`",function(){function a(){var a=o.find("table").attr("aria-activedescendant");expect(o.find("#"+a+" > button")).toHaveClass("active")}it("updates correctly",function(){l(o,"left"),a(),l(o,"down"),a(),l(o,"up",!0),a(),l(o,"up",!0),a()})})})}),describe("attribute `starting-day`",function(){beforeEach(function(){m.startingDay=1,o=n('<datepicker ng-model="date" starting-day="startingDay"></datepicker>')(m),m.$digest()}),it("shows the day labels rotated",function(){expect(f()).toEqual(["Mon","Tue","Wed","Thu","Fri","Sat","Sun"])}),it("renders the calendar days correctly",function(){expect(h(!0)).toEqual([["30","31","01","02","03","04","05"],["06","07","08","09","10","11","12"],["13","14","15","16","17","18","19"],["20","21","22","23","24","25","26"],["27","28","29","30","01","02","03"],["04","05","06","07","08","09","10"]])}),it("renders the week numbers correctly",function(){expect(g()).toEqual(["35","36","37","38","39","40"])})}),describe("attribute `show-weeks`",function(){var a,b;beforeEach(function(){m.showWeeks=!1,o=n('<datepicker ng-model="date" show-weeks="showWeeks"></datepicker>')(m),m.$digest(),a=e().find("th").eq(0),b=o.find("tbody").find("tr").eq(1).find("td").eq(0)}),it("hides week numbers based on variable",function(){expect(a.text()).toEqual(""),expect(a).toBeHidden(),expect(b).toBeHidden()})}),describe("`min-date` attribute",function(){beforeEach(function(){m.mindate=new Date("September 12, 2010"),o=n('<datepicker ng-model="date" min-date="mindate"></datepicker>')(m),m.$digest()}),it("disables appropriate days in current month",function(){var a=j();angular.forEach(a,function(a,b){expect(angular.element(a).prop("disabled")).toBe(14>b)})}),it("disables appropriate days when min date changes",function(){m.mindate=new Date("September 5, 2010"),m.$digest();var a=j();angular.forEach(a,function(a,b){expect(angular.element(a).prop("disabled")).toBe(7>b)})}),it("invalidates when model is a disabled date",function(){m.mindate=new Date("September 5, 2010"),m.date=new Date("September 2, 2010"),m.$digest(),expect(o.hasClass("ng-invalid")).toBeTruthy(),expect(o.hasClass("ng-invalid-date-disabled")).toBeTruthy()}),it("disables all days in previous month",function(){c();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!0)})}),it("disables no days in next month",function(){d();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!1)})}),it("disables appropriate months in current year",function(){b();var a=j();angular.forEach(a,function(a,b){expect(angular.element(a).prop("disabled")).toBe(8>b)})}),it("disables all months in previous year",function(){b(),c();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!0)})}),it("disables no months in next year",function(){b(),d();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!1)})}),it("enables everything before if it is cleared",function(){m.mindate=null,m.date=new Date("December 20, 1949"),m.$digest(),b();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!1)})})}),describe("`max-date` attribute",function(){beforeEach(function(){m.maxdate=new Date("September 25, 2010"),o=n('<datepicker ng-model="date" max-date="maxdate"></datepicker>')(m),m.$digest()}),it("disables appropriate days in current month",function(){var a=j();angular.forEach(a,function(a,b){expect(angular.element(a).prop("disabled")).toBe(b>27)})}),it("disables appropriate days when max date changes",function(){m.maxdate=new Date("September 18, 2010"),m.$digest();var a=j();angular.forEach(a,function(a,b){expect(angular.element(a).prop("disabled")).toBe(b>20)})}),it("invalidates when model is a disabled date",function(){m.maxdate=new Date("September 18, 2010"),m.$digest(),expect(o.hasClass("ng-invalid")).toBeTruthy(),expect(o.hasClass("ng-invalid-date-disabled")).toBeTruthy()}),it("disables no days in previous month",function(){c();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!1)})}),it("disables all days in next month",function(){d();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!0)})}),it("disables appropriate months in current year",function(){b();var a=j();angular.forEach(a,function(a,b){expect(angular.element(a).prop("disabled")).toBe(b>8)})}),it("disables no months in previous year",function(){b(),c();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!1)})}),it("disables all months in next year",function(){b(),d();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!0)})}),it("enables everything after if it is cleared",function(){m.maxdate=null,m.$digest();var a=j();angular.forEach(a,function(a){expect(angular.element(a).prop("disabled")).toBe(!1)})})}),describe("date-disabled expression",function(){beforeEach(function(){m.dateDisabledHandler=jasmine.createSpy("dateDisabledHandler"),o=n('<datepicker ng-model="date" date-disabled="dateDisabledHandler(date, mode)"></datepicker>')(m),m.$digest()}),it("executes the dateDisabled expression for each visible day plus one for validation",function(){expect(m.dateDisabledHandler.calls.length).toEqual(43)}),it("executes the dateDisabled expression for each visible month plus one for validation",function(){m.dateDisabledHandler.reset(),b(),expect(m.dateDisabledHandler.calls.length).toEqual(13)}),it("executes the dateDisabled expression for each visible year plus one for validation",function(){b(),m.dateDisabledHandler.reset(),b(),expect(m.dateDisabledHandler.calls.length).toEqual(21)})}),describe("formatting",function(){beforeEach(function(){m.dayTitle="MMMM, yy",o=n('<datepicker ng-model="date"format-day="d"format-day-header="EEEE"format-day-title="{{dayTitle}}"format-month="MMM"format-month-title="yy"format-year="yy"year-range="10"></datepicker>')(m),m.$digest()}),it("changes the title format in `day` mode",function(){expect(a()).toBe("September, 10")}),it("changes the title & months format in `month` mode",function(){b(),expect(a()).toBe("10"),expect(h()).toEqual([["Jan","Feb","Mar"],["Apr","May","Jun"],["Jul","Aug","Sep"],["Oct","Nov","Dec"]])}),it("changes the title, year format & range in `year` mode",function(){b(),b(),expect(a()).toBe("01 - 10"),expect(h()).toEqual([["01","02","03","04","05"],["06","07","08","09","10"]])}),it("shows day labels",function(){expect(f()).toEqual(["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"])}),it("changes the day format",function(){expect(h(!0)).toEqual([["29","30","31","1","2","3","4"],["5","6","7","8","9","10","11"],["12","13","14","15","16","17","18"],["19","20","21","22","23","24","25"],["26","27","28","29","30","1","2"],["3","4","5","6","7","8","9"]])})}),describe("setting datepickerConfig",function(){var c={};beforeEach(inject(function(a){angular.extend(c,a),a.formatDay="d",a.formatMonth="MMM",a.formatYear="yy",a.formatDayHeader="EEEE",a.formatDayTitle="MMM, yy",a.formatMonthTitle="yy",a.showWeeks=!1,a.yearRange=10,a.startingDay=6,o=n('<datepicker ng-model="date"></datepicker>')(m),m.$digest()})),afterEach(inject(function(a){angular.extend(a,c)})),it("changes the title format in `day` mode",function(){expect(a()).toBe("Sep, 10")}),it("changes the title & months format in `month` mode",function(){b(),expect(a()).toBe("10"),expect(h()).toEqual([["Jan","Feb","Mar"],["Apr","May","Jun"],["Jul","Aug","Sep"],["Oct","Nov","Dec"]])}),it("changes the title, year format & range in `year` mode",function(){b(),b(),expect(a()).toBe("01 - 10"),expect(h()).toEqual([["01","02","03","04","05"],["06","07","08","09","10"]])}),it("changes the `starting-day` & day headers & format",function(){expect(f()).toEqual(["Saturday","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday"]),expect(h(!0)).toEqual([["28","29","30","31","1","2","3"],["4","5","6","7","8","9","10"],["11","12","13","14","15","16","17"],["18","19","20","21","22","23","24"],["25","26","27","28","29","30","1"],["2","3","4","5","6","7","8"]])}),it("changes initial visibility for weeks",function(){expect(e().find("th").eq(0)).toBeHidden();for(var a=o.find("tbody").find("tr"),b=0;5>b;b++)expect(a.eq(b).find("td").eq(0)).toBeHidden()})}),describe("setting datepickerPopupConfig",function(){var a={};beforeEach(inject(function(b){angular.extend(a,b),b.datepickerPopup="MM-dd-yyyy",o=n('<input ng-model="date" datepicker-popup>')(m),m.$digest()})),afterEach(inject(function(b){angular.extend(b,a)})),it("changes date format",function(){expect(o.val()).toEqual("09-30-2010")})}),describe("as popup",function(){function c(a){g=a.find("input"),j=a.find("ul"),o=j.find("table")}function d(a,b){a.val(b),a.trigger(q.hasEvent("input")?"input":"change"),m.$digest()}var g,j,p,q;describe("initially",function(){beforeEach(inject(function(a){p=a,m.isopen=!0,m.date=new Date("September 30, 2010 15:30:00");var b=n('<div><input ng-model="date" datepicker-popup><div>')(m);m.$digest(),c(b)})),it("does not to display datepicker initially",function(){expect(j).toBeHidden()}),it("to display the correct value in input",function(){expect(g.val()).toBe("2010-09-30")})}),describe("initially opened",function(){beforeEach(inject(function(a,b){p=a,q=b,m.isopen=!0,m.date=new Date("September 30, 2010 15:30:00");var d=n('<div><input ng-model="date" datepicker-popup is-open="isopen"><div>')(m);m.$digest(),c(d)})),it("datepicker is displayed",function(){expect(j).not.toBeHidden()}),it("renders the calendar correctly",function(){expect(e().css("display")).not.toBe("none"),expect(f()).toEqual(["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),expect(h(!0)).toEqual([["29","30","31","01","02","03","04"],["05","06","07","08","09","10","11"],["12","13","14","15","16","17","18"],["19","20","21","22","23","24","25"],["26","27","28","29","30","01","02"],["03","04","05","06","07","08","09"]])}),it("updates the input when a day is clicked",function(){i(17),expect(g.val()).toBe("2010-09-15"),expect(m.date).toEqual(new Date("September 15, 2010 15:30:00"))}),it("should mark the input field dirty when a day is clicked",function(){expect(g).toHaveClass("ng-pristine"),i(17),expect(g).toHaveClass("ng-dirty")}),it("updates the input correctly when model changes",function(){m.date=new Date("January 10, 1983 10:00:00"),m.$digest(),expect(g.val()).toBe("1983-01-10")}),it("closes the dropdown when a day is clicked",function(){expect(j.css("display")).not.toBe("none"),i(17),expect(j.css("display")).toBe("none")}),it("updates the model & calendar when input value changes",function(){d(g,"March 5, 1980"),expect(m.date.getFullYear()).toEqual(1980),expect(m.date.getMonth()).toEqual(2),expect(m.date.getDate()).toEqual(5),expect(h(!0)).toEqual([["24","25","26","27","28","29","01"],["02","03","04","05","06","07","08"],["09","10","11","12","13","14","15"],["16","17","18","19","20","21","22"],["23","24","25","26","27","28","29"],["30","31","01","02","03","04","05"]]),k(10)}),it("closes when click outside of calendar",function(){expect(j).not.toBeHidden(),p.find("body").click(),expect(j.css("display")).toBe("none")}),it("sets `ng-invalid` for invalid input",function(){d(g,"pizza"),expect(g).toHaveClass("ng-invalid"),expect(g).toHaveClass("ng-invalid-date"),expect(m.date).toBeUndefined(),expect(g.val()).toBe("pizza")}),it("unsets `ng-invalid` for valid input",function(){d(g,"pizza"),expect(g).toHaveClass("ng-invalid-date"),m.date=new Date("August 11, 2013"),m.$digest(),expect(g).not.toHaveClass("ng-invalid"),expect(g).not.toHaveClass("ng-invalid-date")}),describe("focus",function(){beforeEach(function(){var a=p.find("body");a.append(g),a.append(j)}),afterEach(function(){g.remove(),j.remove()}),it("returns to the input when ESC key is pressed in the popup and closes",function(){expect(j).not.toBeHidden(),j.find("button").eq(0).focus(),expect(document.activeElement.tagName).toBe("BUTTON"),l(j,"esc"),expect(j).toBeHidden(),expect(document.activeElement.tagName).toBe("INPUT")}),it("returns to the input when ESC key is pressed in the input and closes",function(){expect(j).not.toBeHidden(),j.find("button").eq(0).focus(),expect(document.activeElement.tagName).toBe("BUTTON"),l(g,"esc"),m.$digest(),expect(j).toBeHidden(),expect(document.activeElement.tagName).toBe("INPUT")})})}),describe("attribute `datepickerOptions`",function(){var a,b;beforeEach(function(){m.opts={"show-weeks":!1};var d=n('<div><input ng-model="date" datepicker-popup datepicker-options="opts" is-open="true"></div>')(m);m.$digest(),c(d),a=e().find("th").eq(0),b=o.find("tbody").find("tr").eq(1).find("td").eq(0)}),it("hides week numbers based on variable",function(){expect(a.text()).toEqual(""),expect(a).toBeHidden(),expect(b).toBeHidden()})}),describe("toggles programatically by `open` attribute",function(){beforeEach(inject(function(){m.open=!0;var a=n('<div><input ng-model="date" datepicker-popup is-open="open"><div>')(m);m.$digest(),c(a)})),it("to display initially",function(){expect(j.css("display")).not.toBe("none")}),it("to close / open from scope variable",function(){expect(j.css("display")).not.toBe("none"),m.open=!1,m.$digest(),expect(j.css("display")).toBe("none"),m.open=!0,m.$digest(),expect(j.css("display")).not.toBe("none")})}),describe("custom format",function(){beforeEach(inject(function(){var a=n('<div><input ng-model="date" datepicker-popup="dd-MMMM-yyyy"><div>')(m);m.$digest(),c(a)})),it("to display the correct value in input",function(){expect(g.val()).toBe("30-September-2010")}),it("updates the input when a day is clicked",function(){i(17),expect(g.val()).toBe("15-September-2010"),expect(m.date).toEqual(new Date("September 15, 2010 15:30:00"))}),it("updates the input correctly when model changes",function(){m.date=new Date("January 10, 1983 10:00:00"),m.$digest(),expect(g.val()).toBe("10-January-1983")})}),describe("dynamic custom format",function(){beforeEach(inject(function(){m.format="dd-MMMM-yyyy";var a=n('<div><input ng-model="date" datepicker-popup="{{format}}"><div>')(m);m.$digest(),c(a)})),it("to display the correct value in input",function(){expect(g.val()).toBe("30-September-2010")}),it("updates the input when a day is clicked",function(){i(17),expect(g.val()).toBe("15-September-2010"),expect(m.date).toEqual(new Date("September 15, 2010 15:30:00"))}),it("updates the input correctly when model changes",function(){m.date=new Date("August 11, 2013 09:09:00"),m.$digest(),expect(g.val()).toBe("11-August-2013")}),it("updates the input correctly when format changes",function(){m.format="dd/MM/yyyy",m.$digest(),expect(g.val()).toBe("30/09/2010")})}),describe("european format",function(){it("dd.MM.yyyy",function(){var a=n('<div><input ng-model="date" datepicker-popup="dd.MM.yyyy"><div>')(m);m.$digest(),c(a),d(g,"11.08.2013"),expect(m.date.getFullYear()).toEqual(2013),expect(m.date.getMonth()).toEqual(7),expect(m.date.getDate()).toEqual(11)})}),describe("`close-on-date-selection` attribute",function(){beforeEach(inject(function(){m.close=!1;var a=n('<div><input ng-model="date" datepicker-popup close-on-date-selection="close" is-open="true"><div>')(m);m.$digest(),c(a)})),it("does not close the dropdown when a day is clicked",function(){i(17),expect(j.css("display")).not.toBe("none")})}),describe("button bar",function(){function a(){d=j.find("li").eq(-1),b=d.find("button")}var b,d;describe("",function(){beforeEach(inject(function(){m.isopen=!0;var b=n('<div><input ng-model="date" datepicker-popup is-open="isopen"><div>')(m);m.$digest(),c(b),a()})),it("should exist",function(){expect(j).not.toBeHidden(),expect(j.find("li").length).toBe(2)}),it("should have three buttons",function(){expect(b.length).toBe(3),expect(b.eq(0).text()).toBe("Today"),expect(b.eq(1).text()).toBe("Clear"),expect(b.eq(2).text()).toBe("Done")}),it("should have a button to set today date without altering time part",function(){var a=new Date;b.eq(0).click(),expect(m.date.getFullYear()).toBe(a.getFullYear()),expect(m.date.getMonth()).toBe(a.getMonth()),expect(m.date.getDate()).toBe(a.getDate()),expect(m.date.getHours()).toBe(15),expect(m.date.getMinutes()).toBe(30),expect(m.date.getSeconds()).toBe(0)}),it("should have a button to set today date if blank",function(){m.date=null,m.$digest();var a=new Date;b.eq(0).click(),expect(m.date.getFullYear()).toBe(a.getFullYear()),expect(m.date.getMonth()).toBe(a.getMonth()),expect(m.date.getDate()).toBe(a.getDate()),expect(m.date.getHours()).toBe(0),expect(m.date.getMinutes()).toBe(0),expect(m.date.getSeconds()).toBe(0)}),it("should have a button to clear value",function(){b.eq(1).click(),expect(m.date).toBe(null)}),it("should have a button to close calendar",function(){b.eq(2).click(),expect(j).toBeHidden()})}),describe("customization",function(){it("should change text from attributes",function(){m.clearText="Null it!",m.close="Close";var d=n('<div><input ng-model="date" datepicker-popup current-text="Now" clear-text="{{clearText}}" close-text="{{close}}ME"><div>')(m);m.$digest(),c(d),a(),expect(b.eq(0).text()).toBe("Now"),expect(b.eq(1).text()).toBe("Null it!"),expect(b.eq(2).text()).toBe("CloseME")}),it("should remove bar",function(){m.showBar=!1;var a=n('<div><input ng-model="date" datepicker-popup show-button-bar="showBar"><div>')(m);m.$digest(),c(a),expect(j.find("li").length).toBe(1)})}),describe("`ng-change`",function(){beforeEach(inject(function(){m.changeHandler=jasmine.createSpy("changeHandler");var b=n('<div><input ng-model="date" datepicker-popup ng-change="changeHandler()"><div>')(m);m.$digest(),c(b),a()})),it("should be called when `today` is clicked",function(){b.eq(0).click(),expect(m.changeHandler).toHaveBeenCalled()}),it("should be called when `clear` is clicked",function(){b.eq(1).click(),expect(m.changeHandler).toHaveBeenCalled()}),it("should not be called when `close` is clicked",function(){b.eq(2).click(),expect(m.changeHandler).not.toHaveBeenCalled()})})}),describe("use with `ng-required` directive",function(){beforeEach(inject(function(){m.date="";
var a=n('<div><input ng-model="date" datepicker-popup ng-required="true"><div>')(m);m.$digest(),c(a)})),it("should be invalid initially",function(){expect(g.hasClass("ng-invalid")).toBeTruthy()}),it("should be valid if model has been specified",function(){m.date=new Date,m.$digest(),expect(g.hasClass("ng-valid")).toBeTruthy()})}),describe("use with `ng-change` directive",function(){beforeEach(inject(function(){m.changeHandler=jasmine.createSpy("changeHandler"),m.date=new Date;var a=n('<div><input ng-model="date" datepicker-popup ng-required="true" ng-change="changeHandler()"><div>')(m);m.$digest(),c(a)})),it("should not be called initially",function(){expect(m.changeHandler).not.toHaveBeenCalled()}),it("should be called when a day is clicked",function(){i(17),expect(m.changeHandler).toHaveBeenCalled()}),it("should not be called when model changes programatically",function(){m.date=new Date,m.$digest(),expect(m.changeHandler).not.toHaveBeenCalled()})}),describe("with an append-to-body attribute",function(){beforeEach(function(){m.date=new Date}),afterEach(function(){p.find("body").find(".dropdown-menu").remove()}),it("should append to the body",function(){var a=p.find("body"),b=a.children().length,c=angular.element('<div><input datepicker-popup ng-model="date" datepicker-append-to-body="true"></input></div>');n(c)(m),m.$digest(),expect(a.children().length).toEqual(b+1),expect(c.children().length).toEqual(1)}),it("should be removed on scope destroy",function(){var a=p.find("body"),b=a.children().length,c=m.$new(),d=angular.element('<input datepicker-popup ng-model="date" datepicker-append-to-body="true"></input>');n(d)(c),c.$digest(),expect(a.children().length).toEqual(b+1),c.$destroy(),expect(a.children().length).toEqual(b)})}),describe("with setting datepickerConfig.showWeeks to false",function(){var a={};beforeEach(inject(function(b){angular.extend(a,b),b.showWeeks=!1;var d=n('<div><input ng-model="date" datepicker-popup><div>')(m);m.$digest(),c(d)})),afterEach(inject(function(b){angular.extend(b,a)})),it("changes initial visibility for weeks",function(){expect(e().find("th").eq(0)).toBeHidden();for(var a=o.find("tbody").find("tr"),b=0;5>b;b++)expect(a.eq(b).find("td").eq(0)).toBeHidden()})}),describe("`datepicker-mode`",function(){beforeEach(inject(function(){m.date=new Date("August 11, 2013"),m.mode="month",wrapElement=n('<div><input ng-model="date" datepicker-popup datepicker-mode="mode"></div>')(m),m.$digest(),c(wrapElement)})),it("shows the correct title",function(){expect(a()).toBe("2013")}),it("updates binding",function(){b(),expect(m.mode).toBe("year")})})}),describe("with empty initial state",function(){beforeEach(inject(function(){m.date=null,o=n('<datepicker ng-model="date"></datepicker>')(m),m.$digest()})),it("is has a `<table>` element",function(){expect(o.find("table").length).toBe(1)}),it("is shows rows with days",function(){expect(o.find("tbody").find("tr").length).toBeGreaterThan(3)}),it("sets default 00:00:00 time for selected date",function(){m.date=new Date("August 1, 2013"),m.$digest(),m.date=null,m.$digest(),i(14),expect(m.date).toEqual(new Date("August 11, 2013 00:00:00"))})}),describe("`init-date`",function(){beforeEach(inject(function(){m.date=null,m.initDate=new Date("November 9, 1980"),o=n('<datepicker ng-model="date" init-date="initDate"></datepicker>')(m),m.$digest()})),it("does not alter the model",function(){expect(m.date).toBe(null)}),it("shows the correct title",function(){expect(a()).toBe("November 1980")})}),describe("`datepicker-mode`",function(){beforeEach(inject(function(){m.date=new Date("August 11, 2013"),m.mode="month",o=n('<datepicker ng-model="date" datepicker-mode="mode"></datepicker>')(m),m.$digest()})),it("shows the correct title",function(){expect(a()).toBe("2013")}),it("updates binding",function(){b(),expect(m.mode).toBe("year")})}),describe("`min-mode`",function(){beforeEach(inject(function(){m.date=new Date("August 11, 2013"),m.mode="month",o=n('<datepicker ng-model="date" min-mode="month" datepicker-mode="mode"></datepicker>')(m),m.$digest()})),it("does not move below it",function(){expect(a()).toBe("2013"),i(5),expect(a()).toBe("2013"),b(),expect(a()).toBe("2001 - 2020")})}),describe("`max-mode`",function(){beforeEach(inject(function(){m.date=new Date("August 11, 2013"),o=n('<datepicker ng-model="date" max-mode="month"></datepicker>')(m),m.$digest()})),it("does not move above it",function(){expect(a()).toBe("August 2013"),b(),expect(a()).toBe("2013"),b(),expect(a()).toBe("2013")})})});
//# sourceMappingURL=..\..\..\debug\ui-bootstrap\datepicker\test\datepicker.spec.min.map