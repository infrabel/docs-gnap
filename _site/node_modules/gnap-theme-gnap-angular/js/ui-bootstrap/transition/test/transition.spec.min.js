describe("$transition",function(){var a,b,c=function(){var a=3,b=document.createElement("div"),c=b.getElementsByTagName("i");do b.innerHTML="<!--[if gt IE "+ ++a+"]><i></i><![endif]-->";while(c[0]);return a>4?a:void 0}();beforeEach(module("ui.bootstrap.transition")),beforeEach(inject(function(c,d){a=c,b=d})),it("returns our custom promise",function(){var b=angular.element("<div></div>"),c=a(b,"");expect(c.then).toEqual(jasmine.any(Function)),expect(c.cancel).toEqual(jasmine.any(Function))}),it("changes the css if passed a string",function(){var c=angular.element("<div></div>");spyOn(c,"addClass"),a(c,"triggerClass"),b.flush(),expect(c.addClass).toHaveBeenCalledWith("triggerClass")}),it("changes the style if passed an object",function(){var c=angular.element("<div></div>"),d={height:"11px"};spyOn(c,"css"),a(c,d),b.flush(),expect(c.css).toHaveBeenCalledWith(d)}),it("calls the function if passed",function(){var c=angular.element("<div></div>"),d=jasmine.createSpy("triggerFunction");a(c,d),b.flush(),expect(d).toHaveBeenCalledWith(c)}),!c||c>9?describe("transitionEnd event",function(){var c,d;beforeEach(function(){c=angular.element("<div></div>"),spyOn(c,"bind").andCallFake(function(a,b){d=b}),spyOn(c,"unbind")}),describe("transitionEndEventName",function(){it("should be a string ending with transitionend",function(){expect(a.transitionEndEventName).toMatch(/transitionend$/i)})}),describe("animationEndEventName",function(){it("should be a string ending with animationend",function(){expect(a.animationEndEventName).toMatch(/animationend$/i)})}),it("binds a transitionEnd handler to the element",function(){a(c,""),expect(c.bind).toHaveBeenCalledWith(a.transitionEndEventName,jasmine.any(Function))}),it("binds an animationEnd handler to the element if option is given",function(){a(c,"",{animation:!0}),expect(c.bind).toHaveBeenCalledWith(a.animationEndEventName,jasmine.any(Function))}),it("resolves the promise when the transitionEnd is triggered",function(){var e=jasmine.createSpy("resolutionHandler");a(c,"").then(e),d(),b.flush(),expect(e).toHaveBeenCalledWith(c)}),it("rejects the promise if transition is cancelled",function(){var b=jasmine.createSpy("rejectionHandler"),d=a(c,"");d.then(null,b),d.cancel(),inject(function(a){a.$digest()}),expect(b).toHaveBeenCalledWith(jasmine.any(String)),expect(c.unbind).toHaveBeenCalledWith(a.transitionEndEventName,jasmine.any(Function))})}):(describe("transitionEndEventName",function(){it("should be undefined",function(){expect(a.transitionEndEventName).not.toBeDefined()})}),it("does not bind a transitionEnd handler to the element",function(){var b=angular.element("<div></div>");spyOn(b,"bind"),a(b,""),expect(b.bind).not.toHaveBeenCalledWith(a.transitionEndEventName,jasmine.any(Function))}),it("resolves the promise",function(){var c=angular.element("<div></div>"),d=jasmine.createSpy("transitionEndHandler");a(c,"").then(d),b.flush(),expect(d).toHaveBeenCalledWith(c)}))});
//# sourceMappingURL=..\..\..\debug\ui-bootstrap\transition\test\transition.spec.min.map