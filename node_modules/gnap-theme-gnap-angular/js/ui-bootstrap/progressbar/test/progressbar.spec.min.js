describe("progressbar directive",function(){function a(a){return c.children().eq(a)}var b,c;beforeEach(module("ui.bootstrap.progressbar")),beforeEach(module("template/progressbar/progressbar.html","template/progressbar/progress.html","template/progressbar/bar.html")),beforeEach(inject(function(a,d){$compile=a,b=d,b.value=22,c=$compile('<progressbar animate="false" value="value">{{value}} %</progressbar>')(b),b.$digest()}));var d="progress-bar";it('has a "progress" css class',function(){expect(c).toHaveClass("progress")}),it('contains one child element with "bar" css class',function(){expect(c.children().length).toBe(1),expect(a(0)).toHaveClass(d)}),it('has a "bar" element with expected width',function(){expect(a(0).css("width")).toBe("22%")}),it("has the appropriate aria markup",function(){var b=a(0);expect(b.attr("role")).toBe("progressbar"),expect(b.attr("aria-valuemin")).toBe("0"),expect(b.attr("aria-valuemax")).toBe("100"),expect(b.attr("aria-valuenow")).toBe("22"),expect(b.attr("aria-valuetext")).toBe("22%")}),it('transcludes "bar" text',function(){expect(a(0).text()).toBe("22 %")}),it("it should be possible to add additional classes",function(){c=$compile('<progress class="progress-striped active" max="200"><bar class="pizza"></bar></progress>')(b),b.$digest(),expect(c).toHaveClass("progress-striped"),expect(c).toHaveClass("active"),expect(a(0)).toHaveClass("pizza")}),it('adjusts the "bar" width and aria when value changes',function(){b.value=60,b.$digest();var c=a(0);expect(c.css("width")).toBe("60%"),expect(c.attr("aria-valuemin")).toBe("0"),expect(c.attr("aria-valuemax")).toBe("100"),expect(c.attr("aria-valuenow")).toBe("60"),expect(c.attr("aria-valuetext")).toBe("60%")}),it('allows fractional "bar" width values, rounded to two places',function(){b.value=5.625,b.$digest(),expect(a(0).css("width")).toBe("5.63%"),b.value=1.3,b.$digest(),expect(a(0).css("width")).toBe("1.3%")}),it("does not include decimals in aria values",function(){b.value=50.34,b.$digest();var c=a(0);expect(c.css("width")).toBe("50.34%"),expect(c.attr("aria-valuetext")).toBe("50%")}),describe('"max" attribute',function(){beforeEach(inject(function(){b.max=200,c=$compile('<progressbar max="max" animate="false" value="value">{{value}}/{{max}}</progressbar>')(b),b.$digest()})),it("has the appropriate aria markup",function(){expect(a(0).attr("aria-valuemax")).toBe("200")}),it('adjusts the "bar" width',function(){expect(c.children().eq(0).css("width")).toBe("11%")}),it('adjusts the "bar" width when value changes',function(){b.value=60,b.$digest(),expect(a(0).css("width")).toBe("30%"),b.value+=12,b.$digest(),expect(a(0).css("width")).toBe("36%"),b.value=0,b.$digest(),expect(a(0).css("width")).toBe("0%")}),it('transcludes "bar" text',function(){expect(a(0).text()).toBe("22/200")})}),describe('"type" attribute',function(){beforeEach(inject(function(){b.type="success",c=$compile('<progressbar value="value" type="{{type}}"></progressbar>')(b),b.$digest()})),it("should use correct classes",function(){expect(a(0)).toHaveClass(d),expect(a(0)).toHaveClass(d+"-success")}),it("should change classes if type changed",function(){b.type="warning",b.value+=1,b.$digest();var c=a(0);expect(c).toHaveClass(d),expect(c).not.toHaveClass(d+"-success"),expect(c).toHaveClass(d+"-warning")})}),describe("stacked",function(){beforeEach(inject(function(){b.objects=[{value:10,type:"success"},{value:50,type:"warning"},{value:20}],c=$compile('<progress animate="false"><bar ng-repeat="o in objects" value="o.value" type="{{o.type}}">{{o.value}}</bar></progress>')(b),b.$digest()})),it("contains the right number of bars",function(){expect(c.children().length).toBe(3);for(var b=0;3>b;b++)expect(a(b)).toHaveClass(d)}),it("renders each bar with the appropriate width",function(){expect(a(0).css("width")).toBe("10%"),expect(a(1).css("width")).toBe("50%"),expect(a(2).css("width")).toBe("20%")}),it("uses correct classes",function(){expect(a(0)).toHaveClass(d+"-success"),expect(a(0)).not.toHaveClass(d+"-warning"),expect(a(1)).not.toHaveClass(d+"-success"),expect(a(1)).toHaveClass(d+"-warning"),expect(a(2)).not.toHaveClass(d+"-success"),expect(a(2)).not.toHaveClass(d+"-warning")}),it("should change classes if type changed",function(){b.objects=[{value:20,type:"warning"},{value:50},{value:30,type:"info"}],b.$digest(),expect(a(0)).not.toHaveClass(d+"-success"),expect(a(0)).toHaveClass(d+"-warning"),expect(a(1)).not.toHaveClass(d+"-success"),expect(a(1)).not.toHaveClass(d+"-warning"),expect(a(2)).toHaveClass(d+"-info"),expect(a(2)).not.toHaveClass(d+"-success"),expect(a(2)).not.toHaveClass(d+"-warning")}),it("should change classes if type changed",function(){b.objects=[{value:70,type:"info"}],b.$digest(),expect(c.children().length).toBe(1),expect(a(0)).toHaveClass(d+"-info"),expect(a(0)).not.toHaveClass(d+"-success"),expect(a(0)).not.toHaveClass(d+"-warning")})})});
//# sourceMappingURL=..\..\..\debug\ui-bootstrap\progressbar\test\progressbar.spec.min.map